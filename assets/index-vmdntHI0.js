var rt=Object.defineProperty;var ct=(l,t,e)=>t in l?rt(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var p=(l,t,e)=>(ct(l,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=e(s);fetch(s.href,o)}})();function v(l,t){return l=Math.ceil(l),t=Math.floor(t),Math.floor(Math.random()*(t-l)+l)}function E(l){const t=l.split(",");return[parseInt(t[0]),parseInt(t[1])]}function dt(l,t,e){const i=[],s=[];for(let o of l)i.push(e[0]*o[0]+e[1]*o[1]);for(let o of t)s.push(e[0]*o[0]+e[1]*o[1]);return Math.min(...i)<Math.max(...s)&&Math.min(...i)>Math.min(...s)||Math.min(...s)<Math.max(...i)&&Math.min(...s)>Math.min(...i)}class M{constructor(t,e,i,s,o,n,h){p(this,"collidable",!0);this.pos_x=t,this.pos_y=e,this.collision_offset_x=i,this.collision_offset_y=s,this.collision_width=o,this.collision_height=n,this.objectType=h}center(){const t=this.pos_x+this.collision_offset_x+this.collision_width/2,e=this.pos_y+this.collision_offset_y+this.collision_height/2;return[t,e]}collisionCoords(){const t=[this.pos_x+this.collision_offset_x,this.pos_y+this.collision_offset_y],e=[this.pos_x+this.collision_offset_x+this.collision_width,this.pos_y+this.collision_offset_y],i=[this.pos_x+this.collision_offset_x,this.pos_y+this.collision_offset_y+this.collision_height],s=[this.pos_x+this.collision_offset_x+this.collision_width,this.pos_y+this.collision_offset_y+this.collision_height];return[t,e,i,s]}drawDebug(t,e){let i=!1;for(let n=0;n<e.length;n++)if(t.checkCollision(this,e[n])){i=!0;break}const s=this.pos_x+this.collision_offset_x,o=this.pos_y+this.collision_offset_y;t.ctx.strokeStyle=i?"#ffff00":"#ff0d00",t.ctx.beginPath(),t.ctx.moveTo(s,o),t.ctx.lineTo(s+this.collision_width,o),t.ctx.lineTo(s+this.collision_width,o+this.collision_height),t.ctx.lineTo(s,o+this.collision_height),t.ctx.lineTo(s,o),t.ctx.stroke()}}class ft extends M{constructor(e,i,s,o,n,h,a,r){super(e,i,s,o,n,h,"tile");p(this,"mapTileCoords",[]);this.isCollidable=a,this.isOuter=r}drawImage(e){const i=document.getElementById("map-tile"),s=32,o=32,n=64,h=64;for(const a of this.mapTileCoords)e.beginPath(),e.drawImage(i,a[1]*s,a[0]*o,s,o,this.pos_x+a[3]*h,this.pos_y+a[2]*n,n,h)}}class pt{constructor(t=64,e=64,i=18,s=18,o=10,n){p(this,"graph");p(this,"gridMap",[]);this.tileWidth=t,this.tileHeight=e,this.gridWidth=i,this.gridHeight=s,this.numBlocks=o,this.game=n,this.graph={}}init(){for(let i=0;i<this.gridHeight;i++){let s=[];for(let o=0;o<this.gridWidth;o++)s.push(new ft(o*this.tileWidth,i*this.tileHeight,0,0,this.tileWidth,this.tileHeight,!1,!1));this.gridMap.push(s)}for(let i=0;i<this.gridWidth;i++)for(let s=0;s<this.gridHeight;s++)(i===0||i===this.gridWidth-1||s===0||s===this.gridHeight-1)&&(this.gridMap[s][i].isCollidable=!0,this.gridMap[s][i].isOuter=!0);let t=0,e=0;for(;e<this.numBlocks&&t<500;){let i,s;s=v(1,this.gridWidth-1),i=v(1,this.gridHeight-1),this.gridMap[i][s].isCollidable||(this.gridMap[i][s].isCollidable=!0,e++),t++}this.assignMapTile();for(let i=0;i<this.gridWidth;i++)for(let s=0;s<this.gridHeight;s++)this.gridMap[s][i].isCollidable||(this.graph[`${s},${i}`]=[],s-1>=0&&this.gridMap[s-1][i].isCollidable===!1&&this.graph[`${s},${i}`].push(`${s-1},${i}`),s+1<this.gridHeight&&this.gridMap[s+1][i].isCollidable===!1&&this.graph[`${s},${i}`].push(`${s+1},${i}`),i-1>=0&&this.gridMap[s][i-1].isCollidable===!1&&this.graph[`${s},${i}`].push(`${s},${i-1}`),i+1<this.gridWidth&&this.gridMap[s][i+1].isCollidable===!1&&this.graph[`${s},${i}`].push(`${s},${i+1}`))}findPath(t,e,i,s){if(this.gridMap[t][e].isCollidable||this.gridMap[i][s].isCollidable)return[];const o=[],n={},h=[`${t},${e}`];for(;n[`${i},${s}`]===void 0&&h.length!==0;){const r=h.splice(0,1)[0];for(let c of this.graph[r])n[c]===void 0&&(n[c]=r,h.push(c))}let a=`${i},${s}`;for(o.push(a);!o.includes(`${t},${e}`);){if(n[a]===void 0)return[];a=n[a],o.push(a)}return o.reverse()}findObjectTileLocation(t){let e=0,i=0;for(let s=0;s<this.gridWidth;s++)if((s+1)*this.tileWidth>t.center()[0]){for(let o=0;o<this.gridHeight;o++)if((o+1)*this.tileHeight>t.center()[1]){e=o,i=s;break}break}return[e,i]}findBlock(t,e){const i=t.center(),s=e.center(),o=[i[0]-s[0],i[1]-s[1]],n=[-o[1],o[0]],h=this.findObjectTileLocation(t),a=this.findObjectTileLocation(e),r=Math.min(h[1],a[1]),c=Math.max(h[1],a[1]),d=Math.min(h[0],a[0]),y=Math.max(h[0],a[0]);for(let f=r;f<c+1;f++)for(let m=d;m<y+1;m++)if(!(h[0]===m&&h[1]===f||a[0]===m&&a[1]===f)&&this.gridMap[m][f].isCollidable){const _=this.gridMap[m][f].collisionCoords(),g=t.collisionCoords();if(dt(_,g,n))return!0}return!1}drawDebug(t){for(let o=0;o<this.gridWidth+1;o++)t.ctx.strokeStyle="#00ff44",t.ctx.beginPath(),t.ctx.moveTo(o*this.tileWidth,0),t.ctx.lineTo(o*this.tileWidth,this.gridHeight*this.tileHeight),t.ctx.stroke();for(let o=0;o<this.gridHeight+1;o++)t.ctx.strokeStyle="#00ff44",t.ctx.beginPath(),t.ctx.moveTo(0,o*this.tileHeight),t.ctx.lineTo(this.gridWidth*this.tileWidth,o*this.tileHeight),t.ctx.stroke();for(let o=0;o<this.gridWidth;o++)for(let n=0;n<this.gridHeight;n++)this.gridMap[n][o].isCollidable&&(t.ctx.strokeStyle="#ff0000",t.ctx.beginPath(),t.ctx.moveTo(o*this.tileWidth,n*this.tileHeight),t.ctx.lineTo((o+1)*this.tileWidth,n*this.tileHeight),t.ctx.lineTo((o+1)*this.tileWidth,(n+1)*this.tileHeight),t.ctx.lineTo(o*this.tileWidth,(n+1)*this.tileHeight),t.ctx.lineTo(o*this.tileWidth,n*this.tileHeight),t.ctx.stroke());let e=0,i=0;const s=this.findObjectTileLocation(this.game.player);e=s[0],i=s[1];for(let o of this.game.enemies){let n=0,h=0;const a=this.findObjectTileLocation(o);n=a[0],h=a[1];const r=this.findPath(n,h,e,i);let c=o,d=o,y=r[0];for(let f=0;f<r.length;f++){const m=this.gridMap[E(r[f])[0]][E(r[f])[1]];if(f!==0){c.drawDebug(this.game,[]);const _=E(r[f]),g=E(y),x=[_[1]*this.tileWidth+this.tileWidth/2,_[0]*this.tileHeight+this.tileHeight/2],u=[g[1]*this.tileWidth+this.tileWidth/2,g[0]*this.tileHeight+this.tileHeight/2];this.game.ctx.strokeStyle="#32a852",this.game.ctx.lineWidth=2,this.game.ctx.beginPath(),this.game.ctx.moveTo(u[0],u[1]),this.game.ctx.lineTo(x[0],x[1]),this.game.ctx.stroke(),this.game.ctx.strokeStyle="#9f00e3",this.game.ctx.lineWidth=2,this.findBlock(c,m)&&(this.game.ctx.beginPath(),this.game.ctx.moveTo(c.center()[0],c.center()[1]),this.game.ctx.lineTo(d.center()[0],d.center()[1]),this.game.ctx.stroke(),c=new M(u[0]-o.collision_width/2-o.collision_offset_x,u[1]-o.collision_height/2-o.collision_offset_y,o.collision_offset_x,o.collision_offset_y,o.collision_width,o.collision_height,"object")),f===r.length-1&&(this.game.ctx.beginPath(),this.game.ctx.moveTo(c.center()[0],c.center()[1]),this.game.ctx.lineTo(m.center()[0],m.center()[1]),this.game.ctx.stroke())}d=m,y=r[f]}}}assignMapTile(){let t=0,e=0;for(let i=0;i<this.gridWidth;i++)for(let s=0;s<this.gridHeight;s++)s<this.gridHeight-1&&this.gridMap[s][i].isCollidable&&!this.gridMap[s][i].isOuter?(t=6,e=7,this.gridMap[s][i].mapTileCoords.push([t,e,0,0]),t=5,e=3,this.gridMap[s][i].mapTileCoords.push([t,e,-1,0])):(s===0&&i===0?(t=5,e=16):s===0&&i===this.gridWidth-1?(t=5,e=18):s===this.gridHeight-1&&i===0?(t=7,e=16):s===this.gridHeight-1&&i===this.gridWidth-1?(t=7,e=18):i===0?(t=6,e=16):i===this.gridWidth-1?(t=6,e=18):s===0?(t=5,e=17):s===this.gridHeight-1?(t=7,e=17):(t=2,e=5),this.gridMap[s][i].mapTileCoords.push([t,e,0,0]))}checkCollision(t,e){let i=!1;for(let s=0;s<this.gridWidth;s++){let o=!1;for(let n=0;n<this.gridHeight;n++)if(this.gridMap[n][s].isCollidable&&e.checkCollision(t,this.gridMap[n][s])){i=!0,o=!0;break}if(o)break}return i}}class B{constructor(t,e,i,s=!1){p(this,"previousTime");this.character=t,this.timer=e,this.game=i,this.destroy=s,this.previousTime=this.game.timer}decrement(){this.game.timer-this.previousTime>this.timer&&(this.changeCharacterAttrib(),this.destroy=!0)}changeCharacterAttrib(){throw new Error("Method not implemented.")}}class mt extends B{constructor(t,e,i,s){super(t,e,i),this.speedDecrease=s}changeCharacterAttrib(){this.character.speed-=this.speedDecrease}}class yt extends B{constructor(t,e,i,s){super(t,e,i),this.attackDecrease=s}changeCharacterAttrib(){this.character.attack-=this.attackDecrease}}class _t extends B{constructor(t,e,i){super(t,e,i)}changeCharacterAttrib(){this.character.invincible=!1}}const A=200;class P{constructor(t,e){this.character=t,this.stateName=e}step(t,e){}changeState(t,e){throw new Error("Method not implemented.")}}class X extends P{constructor(t,e=0){super(t,"Attacking"),this.attack_timer=e}step(t){if(this.attack_timer--,this.character.type==="player")for(let e=0;e<t.enemies.length;e++)this.attack_timer>=5&&this.attack_timer<=5&&t.checkHit(this.character,t.enemies[e])&&t.enemies[e].state.stateName!=="Dead"&&t.enemies[e].state.stateName!=="Talking"&&(t.enemies[e].hp-=this.character.attack,t.enemies[e].hp<=0&&(t.enemies[e].state=new Z(t.enemies[e],180)));else this.character.type==="enemy"&&this.attack_timer>=5&&this.attack_timer<=5&&t.checkHit(this.character,t.player)&&t.player.state.stateName!=="Dead"&&t.player.state.stateName!=="Talking"&&!t.player.invincible&&(t.player.hp-=20,t.player.hp<=0&&(t.player.state=new Z(t.player,180)));this.attack_timer===0&&(this.character.state=new b(this.character,30))}changeState(){}}class b extends P{constructor(t,e=0){super(t,"Idle"),this.attack_cooldown=e}step(t){this.attack_cooldown!==0&&this.attack_cooldown--}changeState(t,e){t&&t.attack&&this.attack_cooldown===0&&this.character.state.stateName!=="Dead"&&(this.character.type==="player"?this.character.state=new X(this.character,20):this.character.state=new X(this.character,50)),t&&t.talk&&this.character.type==="player"&&e.calculateObjectDistance(this.character,e.friend)<A&&(this.character.state=new j(this.character))}}class Z extends P{constructor(t,e=0){super(t,"Dead"),this.dead_timer=e}step(t){this.dead_timer--,this.dead_timer<=0&&(console.log("times up dead timer"),this.character.changeProperty({revive:!0}),this.character.changeProperty({hp:100}),this.character.type==="player"&&(this.character.changeProperty({invincible:!0}),this.character.changeProperty({timer:new _t(this.character,2e3,t)})))}changeState(t){t.revive&&this.dead_timer<=0&&(this.character.state=new b(this.character,0))}}class j extends P{constructor(e){super(e,"Talking");p(this,"readyToTalk",!1)}step(e){this.character.type==="player"&&e.calculateObjectDistance(this.character,e.friend)<A&&(e.friend.state=new j(e.friend))}changeState(e){e.endConversation&&(this.character.state=new b(this.character,0))}}class W{constructor(t){this.type=t}step(){}}class et extends W{constructor(t,e,i,s,o){super("move"),this.game=t,this.character=e,this.move_x=i,this.move_y=s,this.move_count=o,this.move_x===null&&(this.move_x=v(-1,2)),this.move_y===null&&(this.move_y=v(-1,2)),this.move_count=v(0,100)}step(){if(this.move_count===0){const i=v(0,3);i===0?(this.move_x=v(-1,2),this.move_y=v(-1,2)):i===1&&(this.move_x=0,this.move_y=0),this.move_count=v(0,100)}else this.move_count--;const t=this.character.pos_x+this.move_x*this.character.speed,e=this.character.pos_y+this.move_y*this.character.speed;this.character.changeProperty({pos_x:t}),this.character.changeProperty({pos_y:e})}}class gt extends W{constructor(t,e,i=0,s=0){super("follow"),this.game=t,this.enemy=e,this.move_x=i,this.move_y=s}step(){if(this.game.calculateObjectDistance(this.game.player,this.enemy)<200){const i=Math.sqrt((this.game.player.pos_x-this.enemy.pos_x)**2+(this.game.player.pos_y-this.enemy.pos_y)**2);this.move_x=(this.game.player.pos_x-this.enemy.pos_x)/i,this.move_y=(this.game.player.pos_y-this.enemy.pos_y)/i}const t=this.enemy.pos_x+this.move_x*this.enemy.speed,e=this.enemy.pos_y+this.move_y*this.enemy.speed;this.enemy.changeProperty({pos_x:t}),this.enemy.changeProperty({pos_y:e})}}class it extends W{constructor(t,e,i=0,s=0){super("attack"),this.game=t,this.enemy=e,this.move_x=i,this.move_y=s}step(){const t=Math.sqrt((this.game.player.pos_x-this.enemy.pos_x)**2+(this.game.player.pos_y-this.enemy.pos_y)**2);this.move_x=(this.game.player.pos_x-this.enemy.pos_x)/t,this.move_y=(this.game.player.pos_y-this.enemy.pos_y)/t;const e=this.enemy.pos_x+this.move_x*this.enemy.speed,i=this.enemy.pos_y+this.move_y*this.enemy.speed;this.enemy.changeProperty({pos_x:e}),this.enemy.changeProperty({pos_y:i}),this.game.calculateObjectDistance(this.game.player,this.enemy)<20&&this.enemy.changeProperty({attack:!0})}}class st extends W{constructor(e,i){super("movePath");p(this,"move_x");p(this,"move_y");this.game=e,this.character=i}step(){let e;if(this.character.type==="player"?e=this.game.friend:this.character.type==="friend"&&(e=this.game.player),e.state.stateName==="Talking"){const i=e.center(),s=this.character.center(),o=i[0],n=i[1],h=s[0],a=s[1],r=Math.sqrt((h-o)**2+(a-n)**2);this.move_x=(o-h)/r,this.move_y=(n-a)/r;const c=this.character.pos_x+this.move_x*this.character.speed,d=this.character.pos_y+this.move_y*this.character.speed,y=this.character.state;r>50?(this.character.changeProperty({pos_x:c}),this.character.changeProperty({pos_y:d})):y.readyToTalk||this.character.changeProperty({readyToTalk:!0})}}}class ut{constructor(t,e,i){p(this,"talkMode",!1);this.player=t,this.game=e,this.command=i}toggleTalkMode(){this.talkMode?(this.talkMode=!1,this.player.changeProperty({endConversation:!0})):(this.command=new st(this.game,this.player),this.talkMode=!0)}step(){if(this.talkMode)this.command.step();else{let t=0,e=0;const i=this.game.keyStates;e-=i[0]?1:0,e+=i[1]?1:0,t-=i[2]?1:0,t+=i[3]?1:0,t!==0&&e!==0&&(t*=Math.sqrt(2)/2,e*=Math.sqrt(2)/2);const s=this.player.pos_x+t*this.player.speed,o=this.player.pos_y+e*this.player.speed;this.player.changeProperty({pos_x:s}),this.player.changeProperty({pos_y:o}),this.player.changeProperty({attack:i[4]}),this.player.changeProperty({talk:i[6]});for(let n of this.player.timers)n.decrement()}}}class xt{constructor(t,e,i,s=[!1,!1,!1,!1,!1]){this.enemy=t,this.game=e,this.command=i,this.keyStates=s}decide(){const t=this.game.calculateObjectDistance(this.game.player,this.enemy);t<100?this.command.type!=="attack"&&(this.command=new it(this.game,this.enemy)):t<200?this.command.type!=="follow"&&(this.command=new gt(this.game,this.enemy)):this.command.type!=="move"&&(this.command=new et(this.game,this.enemy))}step(){this.decide(),this.command.step()}}class wt{constructor(t,e,i){p(this,"talkMode",!1);this.friend=t,this.game=e,this.command=i}toggleTalkMode(){this.talkMode?(this.talkMode=!1,this.friend.changeProperty({endConversation:!0})):(this.command=new st(this.game,this.friend),this.talkMode=!0)}step(){this.talkMode&&this.command.step()}}const C={sprite_width:64,sprite_height:64,frameRows:{Standing:{row:0,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10}]},Walking:{row:1,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:10},{frame:5,delay:10},{frame:6,delay:10},{frame:7,delay:10}]},Jumping:{row:2,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:10},{frame:5,delay:10},{frame:6,delay:10},{frame:7,delay:10}]},Attacking:{row:3,frames:[{frame:0,delay:5},{frame:1,delay:5},{frame:2,delay:5},{frame:3,delay:5},{frame:4,delay:5},{frame:5,delay:5},{frame:6,delay:5},{frame:7,delay:5},{frame:8,delay:5},{frame:9,delay:5}]},Dead:{row:4,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:100},{frame:5,delay:10},{frame:6,delay:10},{frame:7,delay:10},{frame:8,delay:10}]}}},D={sprite_width:64,sprite_height:64,frameRows:{Standing:{row:0,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10}]},Walking:{row:1,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10}]},Attacking:{row:2,frames:[{frame:0,delay:5},{frame:1,delay:5},{frame:2,delay:5},{frame:3,delay:5}]},Dead:{row:3,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:10},{frame:5,delay:10},{frame:6,delay:10},{frame:7,delay:110}]},Ghost:{row:5,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:10},{frame:5,delay:10}]}}},vt={sprite_width:32,sprite_height:32,frameRows:{Standing:{row:0,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:10},{frame:5,delay:10},{frame:6,delay:10},{frame:7,delay:10},{frame:8,delay:10},{frame:9,delay:10}]},Walking:{row:2,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:10},{frame:5,delay:10},{frame:6,delay:10},{frame:7,delay:10},{frame:8,delay:10},{frame:9,delay:10}]},Attacking:{row:8,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:10},{frame:5,delay:10},{frame:6,delay:10},{frame:7,delay:10},{frame:8,delay:10},{frame:9,delay:10}]},Dead:{row:4,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10},{frame:4,delay:10},{frame:5,delay:10},{frame:6,delay:10},{frame:7,delay:10},{frame:8,delay:10},{frame:9,delay:10}]}}},L={sprite_width:32,sprite_height:32,frameRows:{Item:{row:0,frames:[{frame:0,delay:10},{frame:1,delay:10},{frame:2,delay:10},{frame:3,delay:10}]}}},O={sprite_width:32,sprite_height:32,frameRows:{Item:{row:0,frames:[{frame:0,delay:10}]}}},R={sprite_width:32,sprite_height:32,frameRows:{Item:{row:0,frames:[{frame:0,delay:10}]}}};class T{constructor(t,e,i,s,o,n,h,a,r){p(this,"type");p(this,"invincibilityCount");p(this,"invincibilityHide");p(this,"prevPosX",0);p(this,"prevPosY",0);this.src=t,this.spriteInfo=e,this.prevFrameName=i,this.frameCount=s,this.spriteRow=o,this.spriteColumn=n,this.spriteWidth=h,this.spriteHeight=a,this.gameObject=r,this.type="sprite",this.invincibilityCount=0,this.invincibilityHide=!1}step(t){const e=this.prevFrameName;let i="Item";if(this.gameObject.objectType==="character"){const n=this.gameObject.state.stateName;n==="Attacking"?i="Attacking":n==="Dead"?i="Dead":this.prevPosX!==this.gameObject.pos_x||this.prevPosY!==this.gameObject.pos_y?i="Walking":i="Standing"}e===i?this.frameCount++:(this.frameCount=0,this.spriteRow=this.spriteInfo.frameRows[i].row,this.spriteColumn=0),this.frameCount===this.spriteInfo.frameRows[i].frames[this.spriteColumn].delay&&(this.spriteColumn===this.spriteInfo.frameRows[i].frames.length-1?this.spriteColumn=0:this.spriteColumn++,this.frameCount=0),this.prevFrameName=i,this.prevPosX=this.gameObject.pos_x,this.prevPosY=this.gameObject.pos_y;const s=15;t?(this.invincibilityCount++,this.invincibilityCount>=s&&(this.invincibilityCount=0,this.invincibilityHide=!this.invincibilityHide)):(this.invincibilityCount=0,this.invincibilityHide=!1)}drawImage(t,e,i,s,o=!1){s||this.step(o),this.invincibilityHide||t.drawImage(this.src,this.spriteWidth*this.spriteColumn,this.spriteHeight*this.spriteRow,this.spriteWidth,this.spriteHeight,e,i,this.spriteWidth,this.spriteHeight)}}class ot{constructor(t,e,i){this.offset_x=t,this.offset_y=e,this.gameObject=i}draw(t){throw new Error("method not implemented")}}class kt extends ot{constructor(t,e,i,s,o){super(t,e,o),this.width=i,this.height=s,this.character=o}draw(t){const e=this.character.hp;t.beginPath(),t.fillStyle="red",t.fillRect(this.character.pos_x+this.character.hit_offset_x+this.offset_x,this.character.pos_y+this.character.hit_offset_y+this.offset_y,this.width*Math.max(e/100,0),this.height)}}class Tt extends ot{constructor(t,e,i,s,o){super(t,e,s),this.image=i,this.character=s,this.game=o}draw(t){this.game.calculateObjectDistance(this.game.player,this.character)<A&&t.drawImage(this.image,this.character.pos_x+this.offset_x,this.character.pos_y+this.offset_y)}}const bt=document.getElementById("player"),St=document.getElementById("friend"),V=document.getElementById("letter-t"),Ct=document.getElementById("enemy");class $ extends M{constructor(e,i,s,o,n,h,a,r,c,d,y,f,m,_,g,x,u,w,k,S){super(o,n,h,a,r,c,"character");p(this,"invincible",!1);p(this,"timers",[]);this.state=e,this.sprite=i,this.gauge=s,this.hit_offset_x=d,this.hit_offset_y=y,this.hit_width=f,this.hit_height=m,this.speed=_,this.type=g,this.hp=x,this.attack=u,this.max_health=w,this.max_speed=k,this.game=S}getStateName(){return this.state.stateName}drawImage(e,i){this.gauge!==null&&this.gauge.draw(e),this.sprite.drawImage(e,this.pos_x,this.pos_y,i,this.invincible)}drawDebug(e,i){e.ctx.strokeStyle="#0f0f0f",e.ctx.beginPath(),e.ctx.moveTo(this.pos_x,this.pos_y),e.ctx.lineTo(this.pos_x+this.sprite.spriteInfo.sprite_width,this.pos_y),e.ctx.lineTo(this.pos_x+this.sprite.spriteInfo.sprite_width,this.pos_y+this.sprite.spriteInfo.sprite_height),e.ctx.lineTo(this.pos_x,this.pos_y+this.sprite.spriteInfo.sprite_height),e.ctx.lineTo(this.pos_x,this.pos_y),e.ctx.stroke();let s=!1;for(let r=0;r<i.length;r++)if(e.checkCollision(this,i[r])){s=!0;break}const o=this.pos_x+this.collision_offset_x,n=this.pos_y+this.collision_offset_y;e.ctx.strokeStyle=s?"#ffff00":"#ff0d00",e.ctx.beginPath(),e.ctx.moveTo(o,n),e.ctx.lineTo(o+this.collision_width,n),e.ctx.lineTo(o+this.collision_width,n+this.collision_height),e.ctx.lineTo(o,n+this.collision_height),e.ctx.lineTo(o,n),e.ctx.stroke();const h=this.pos_x+this.hit_offset_x,a=this.pos_y+this.hit_offset_y;e.ctx.strokeStyle="#3437eb",e.ctx.beginPath(),e.ctx.moveTo(h,a),e.ctx.lineTo(h+this.hit_width,a),e.ctx.lineTo(h+this.hit_width,a+this.hit_height),e.ctx.lineTo(h,a+this.hit_height),e.ctx.lineTo(h,a),e.ctx.stroke()}changeProperty(e){throw new Error("Method not implemented.")}step(){this.state.step(this.game)}}class F extends ${constructor(t,e,i,s,o,n,h,a,r,c,d,y,f,m,_,g,x,u,w,k,S){super(e,s,i,o,n,h,a,r,c,d,y,f,m,_,"player",g,x,u,w,S),this.agent=t,this.max_attack=k}static init(t,e){if(!e){let i=0;for(;t.player===null&&i<500;){const s=new F(null,null,null,null,Math.random()*t.canvas.width,Math.random()*t.canvas.height,20,54,22,10,20,20,22,40,4,100,20,100,8,40,t);let o=!1;if(t.grid.checkCollision(s,t)&&(o=!0),!o){t.player=s,t.player.agent=new ut(t.player,t,null),t.player.state=new b(t.player),t.player.sprite=new T(bt,D,"Standing",0,0,0,D.sprite_width,D.sprite_height,t.player);break}i++}}}changeProperty(t){if(t.pos_x){const e=this.pos_x;this.pos_x=t.pos_x,(this.state.stateName==="Dead"||this.game.grid.checkCollision(this,this.game)||this.game.checkCollision(this,this.game.friend))&&(this.pos_x=e)}if(t.pos_y){const e=this.pos_y;this.pos_y=t.pos_y,(this.state.stateName==="Dead"||this.game.grid.checkCollision(this,this.game)||this.game.checkCollision(this,this.game.friend))&&(this.pos_y=e)}if(t.attack&&this.state.changeState({attack:t.attack},this.game),t.talk&&this.state.changeState({talk:!0},this.game),t.invincible&&(this.invincible=!0),t.hp&&(this.hp=t.hp),t.timer&&this.timers.push(t.timer),t.revive&&this.state.changeState({revive:!0}),t.readyToTalk&&this.state.stateName==="Talking"){const e=this.state;e.readyToTalk=!0}t.endConversation&&this.state.changeState({endConversation:!0})}step(){this.agent.step(),this.state.step(this.game)}}class G extends ${constructor(t,e,i,s,o,n,h,a,r,c,d,y,f,m,_,g,x,u,w,k){super(e,i,s,o,n,h,a,r,c,d,y,f,m,_,"enemy",g,x,u,w,k),this.agent=t}static init(t){let e=0;for(;t.enemies.length<t.numEnemies&&e<500;){const i=new G(null,null,null,null,Math.random()*t.canvas.width,Math.random()*t.canvas.height,20,50,20,5,20,20,20,34,2,100,20,100,6,t),s=i.collision_offset_x+i.collision_width/2,o=i.collision_offset_y+i.collision_height/2;let n=!1;if(t.enemies.forEach(h=>{const a=h.collision_offset_x,r=h.collision_offset_y,c=h.collision_width,d=h.collision_height,y=h.pos_x,f=h.pos_y,m=a+c/2,_=r+d/2,g=y+m-(i.pos_x+s),x=f+_-(i.pos_y+o);Math.hypot(x,g)<100&&(n=!0)}),t.grid.checkCollision(i,t)&&(n=!0),!n&&i.pos_x>0&&i.pos_x<t.canvas.width-C.sprite_width&&i.pos_y>0&&i.pos_y<t.canvas.height-C.sprite_height){const h=new xt(i,t,null);h.command=new it(t,i),i.state=new b(i),i.agent=h,i.sprite=new T(Ct,C,"Standing",0,0,0,C.sprite_width,C.sprite_height,i),i.gauge=new kt(0,-10,20,5,i),t.enemies.push(i)}e++}}changeProperty(t){if(t.pos_x){const e=this.pos_x;this.pos_x=t.pos_x,(this.state.stateName==="Dead"||this.game.grid.checkCollision(this,this.game)||this.game.checkCollision(this,this.game.friend))&&(this.pos_x=e)}if(t.pos_y){const e=this.pos_y;this.pos_y=t.pos_y,(this.state.stateName==="Dead"||this.game.grid.checkCollision(this,this.game)||this.game.checkCollision(this,this.game.friend))&&(this.pos_y=e)}if(t.attack&&this.state.changeState({attack:t.attack},this.game),t.invincible&&(this.invincible=!0),t.hp&&(this.hp=t.hp),t.timer&&this.timers.push(t.timer),t.revive&&this.state.changeState({revive:!0}),t.readyToTalk&&this.state.stateName==="Talking"){const e=this.state;e.readyToTalk=!0}}step(){this.agent.step(),this.state.step(this.game)}}class K extends ${constructor(t,e,i,s,o,n,h,a,r,c,d,y,f,m,_,g,x,u,w,k){super(e,i,s,o,n,h,a,r,c,d,y,f,m,_,"friend",g,x,u,w,k),this.agent=t}static init(t){let e=0;for(;t.friend===null&&e<500;){const i=new K(null,null,null,null,Math.random()*t.canvas.width,Math.random()*t.canvas.height,10,27,10,5,10,0,10,32,1,100,0,100,6,t);let s=!1;if((t.checkCollision(t.player,i)||t.grid.checkCollision(i,t))&&(s=!0),!s){t.friend=i;const o=new et(t,t.friend);t.friend.agent=new wt(t.friend,t,o),t.friend.state=new b(t.friend),t.friend.sprite=new T(St,vt,"Standing",0,0,0,32,32,t.friend),t.friend.gauge=new Tt(t.friend.sprite.spriteWidth/2-V.width/2,-20,V,t.friend,t);break}e++}}step(){this.agent.step(),this.state.step(this.game)}changeProperty(t){if(t.pos_x){const e=this.pos_x;this.pos_x=t.pos_x,(this.state.stateName==="Dead"||this.game.grid.checkCollision(this,this.game)||this.type==="player"&&this.game.checkCollision(this,this.game.friend)||this.type==="friend"&&this.game.checkCollision(this,this.game.player))&&(this.pos_x=e)}if(t.pos_y){const e=this.pos_y;this.pos_y=t.pos_y,(this.state.stateName==="Dead"||this.game.grid.checkCollision(this,this.game)||this.type==="player"&&this.game.checkCollision(this,this.game.friend)||this.type==="friend"&&this.game.checkCollision(this,this.game.player))&&(this.pos_y=e)}if(t.attack&&this.state.changeState({attack:t.attack},this.game),t.hp&&(this.hp=t.hp),t.timer&&this.timers.push(t.timer),t.revive&&this.state.changeState({revive:!0}),t.readyToTalk&&this.state.stateName==="Talking"){const e=this.state;e.readyToTalk=!0}t.endConversation&&this.state.changeState({endConversation:!0})}}const J=document.querySelector("#canvas");class Mt{constructor(t,e,i){this.gameObject=t,this.game=e,this.zoom=i}saveContextState(){this.game.ctx.save()}restoreContextState(){this.game.ctx.restore()}focus(){this.game.ctx.translate(J.width/2-Math.round(this.gameObject.center()[0]),J.height/2-Math.round(this.gameObject.center()[1]))}}const It=document.getElementById("hud-zombie-head");class Et{constructor(t,e=[]){this.game=t,this.elements=e}init(){const t=this.game.canvas.width;this.elements.push(new Ht(0,0,100,100,"Hello world!","red","black",this.game)),this.elements.push(new Wt(0,0,this.game,It)),this.elements.push(new Pt(t-200,50,150,30,this.game)),this.game.canvas.addEventListener("click",i=>{for(let s of this.elements)if(s.type==="HUDTextElement"){const o=s;this.game.ctx.isPointInPath(o.path,i.offsetX,i.offsetY)&&console.log(`element with text '${o.text}' clicked!`)}})}draw(){for(let t of this.elements)t.draw(this.game.ctx)}}class U{constructor(t,e,i){this.pos_x=t,this.pos_y=e,this.type=i}draw(t){throw new Error("Method not implemented.")}}class Ht extends U{constructor(t,e,i,s,o,n,h,a,r=10,c="Comic Sans MS",d){super(t,e,"HUDTextElement"),this.width=i,this.height=s,this.text=o,this.background_color=n,this.text_color=h,this.game=a,this.fontSize=r,this.fontStyle=c,this.path=d}draw(t){this.path||(this.path=new Path2D,this.path.rect(this.pos_x,this.pos_y,this.width,this.height)),t.fillStyle=this.background_color,t.fillRect(this.pos_x,this.pos_y,this.width,this.height),t.textAlign="center",t.font=this.fontSize+"px "+this.fontStyle,t.fillStyle=this.text_color,t.fillText(this.text,this.pos_x+this.width/2,this.pos_y+this.height/2+this.fontSize/2)}}class Pt extends U{constructor(t,e,i,s,o){super(t,e,"HUDHPElement"),this.width=i,this.height=s,this.game=o}draw(t){const e=this.game.player.hp;t.beginPath();const i=2;t.fillStyle="black",t.fillRect(this.pos_x-i,this.pos_y-i,this.width+2*i,this.height+2*i),t.fillStyle="white",t.fillRect(this.pos_x,this.pos_y,this.width,this.height),t.fillStyle="red",t.fillRect(this.pos_x,this.pos_y,this.width*Math.max(e/100,0),this.height)}}class Wt extends U{constructor(t,e,i,s){super(t,e,"HUDHPElement"),this.game=i,this.image=s}draw(t){t.drawImage(this.image,this.pos_x,this.pos_y)}}const Dt=l=>{document.addEventListener("keydown",t=>{t.code==="KeyW"?l.keyStates[0]=!0:t.code==="KeyS"?l.keyStates[1]=!0:t.code==="KeyA"?l.keyStates[2]=!0:t.code==="KeyD"?l.keyStates[3]=!0:t.code==="Space"?l.keyStates[4]=!0:t.code==="KeyB"?(l.debug=!l.debug,l.keyStates[5]=!0):t.code==="KeyT"?l.keyStates[6]=!0:t.code==="KeyP"&&(l.keyStates[7]=!0,l.keyLock[7]?l.keyLock[7]=!1:l.keyLock[7]=!0)}),document.addEventListener("keyup",t=>{t.code==="KeyW"?l.keyStates[0]=!1:t.code==="KeyS"?l.keyStates[1]=!1:t.code==="KeyA"?l.keyStates[2]=!1:t.code==="KeyD"?l.keyStates[3]=!1:t.code==="Space"?l.keyStates[4]=!1:t.code==="KeyB"?l.keyStates[5]=!1:t.code==="KeyT"?l.keyStates[6]=!1:t.code==="KeyP"&&(l.keyStates[7]=!1)})},Lt=document.getElementById("hp-item"),Ot=document.getElementById("speed-boost-item"),Rt=document.getElementById("attack-boost-item");class q extends M{constructor(t,e,i,s,o,n,h,a,r,c,d,y){super(t,e,i,s,o,n,"item"),this.game=h,this.sprite=a,this.interacting=r,this.interacting_character=c,this.destroy=d,this.type=y}step(){}drawImage(t,e){this.interacting}drawDebug(t,e){}}class Nt extends q{constructor(t,e,i,s,o,n,h,a){super(t,e,i,s,o,n,h,a,!1,"",!1,"hp")}step(){this.game.checkCollisionHit(this,this.game.player)&&(this.game.player.hp=Math.min(this.game.player.hp+20,this.game.player.max_health),this.destroy=!0)}drawImage(t,e){this.sprite.drawImage(t,this.pos_x,this.pos_y,e)}drawDebug(t,e){t.ctx.strokeStyle="#0f0f0f",t.ctx.beginPath(),t.ctx.moveTo(this.pos_x,this.pos_y),t.ctx.lineTo(this.pos_x+this.sprite.spriteInfo.sprite_width,this.pos_y),t.ctx.lineTo(this.pos_x+this.sprite.spriteInfo.sprite_width,this.pos_y+this.sprite.spriteInfo.sprite_height),t.ctx.lineTo(this.pos_x,this.pos_y+this.sprite.spriteInfo.sprite_height),t.ctx.lineTo(this.pos_x,this.pos_y),t.ctx.stroke();let i=!1;for(let n=0;n<e.length;n++)if(t.checkCollision(this,e[n])){i=!0;break}const s=this.pos_x+this.collision_offset_x,o=this.pos_y+this.collision_offset_y;t.ctx.strokeStyle=i?"#ffff00":"#ff0d00",t.ctx.beginPath(),t.ctx.moveTo(s,o),t.ctx.lineTo(s+this.collision_width,o),t.ctx.lineTo(s+this.collision_width,o+this.collision_height),t.ctx.lineTo(s,o+this.collision_height),t.ctx.lineTo(s,o),t.ctx.stroke()}}class Bt extends q{constructor(t,e,i,s,o,n,h,a){super(t,e,i,s,o,n,h,a,!1,"",!1,"speed")}step(){this.game.checkCollisionHit(this,this.game.player)&&(this.game.player.max_speed-this.game.player.speed>=2&&(this.game.player.speed=Math.min(this.game.player.speed+2,this.game.player.max_speed),this.game.player.timers.push(new mt(this.game.player,15e3,this.game,2))),this.destroy=!0)}drawImage(t,e){this.sprite.drawImage(t,this.pos_x,this.pos_y,e)}drawDebug(t,e){t.ctx.strokeStyle="#0f0f0f",t.ctx.beginPath(),t.ctx.moveTo(this.pos_x,this.pos_y),t.ctx.lineTo(this.pos_x+this.sprite.spriteInfo.sprite_width,this.pos_y),t.ctx.lineTo(this.pos_x+this.sprite.spriteInfo.sprite_width,this.pos_y+this.sprite.spriteInfo.sprite_height),t.ctx.lineTo(this.pos_x,this.pos_y+this.sprite.spriteInfo.sprite_height),t.ctx.lineTo(this.pos_x,this.pos_y),t.ctx.stroke();let i=!1;for(let n=0;n<e.length;n++)if(t.checkCollision(this,e[n])){i=!0;break}const s=this.pos_x+this.collision_offset_x,o=this.pos_y+this.collision_offset_y;t.ctx.strokeStyle=i?"#ffff00":"#ff0d00",t.ctx.beginPath(),t.ctx.moveTo(s,o),t.ctx.lineTo(s+this.collision_width,o),t.ctx.lineTo(s+this.collision_width,o+this.collision_height),t.ctx.lineTo(s,o+this.collision_height),t.ctx.lineTo(s,o),t.ctx.stroke()}}class At extends q{constructor(t,e,i,s,o,n,h,a){super(t,e,i,s,o,n,h,a,!1,"",!1,"attack")}step(){this.game.checkCollisionHit(this,this.game.player)&&(this.game.player.max_attack-this.game.player.attack>=10&&(this.game.player.attack=Math.min(this.game.player.attack+10,this.game.player.max_attack),this.game.player.timers.push(new yt(this.game.player,15e3,this.game,10))),this.destroy=!0)}drawImage(t,e){this.sprite.drawImage(t,this.pos_x,this.pos_y,e)}drawDebug(t,e){t.ctx.strokeStyle="#0f0f0f",t.ctx.beginPath(),t.ctx.moveTo(this.pos_x,this.pos_y),t.ctx.lineTo(this.pos_x+this.sprite.spriteInfo.sprite_width,this.pos_y),t.ctx.lineTo(this.pos_x+this.sprite.spriteInfo.sprite_width,this.pos_y+this.sprite.spriteInfo.sprite_height),t.ctx.lineTo(this.pos_x,this.pos_y+this.sprite.spriteInfo.sprite_height),t.ctx.lineTo(this.pos_x,this.pos_y),t.ctx.stroke();let i=!1;for(let n=0;n<e.length;n++)if(t.checkCollision(this,e[n])){i=!0;break}const s=this.pos_x+this.collision_offset_x,o=this.pos_y+this.collision_offset_y;t.ctx.strokeStyle=i?"#ffff00":"#ff0d00",t.ctx.beginPath(),t.ctx.moveTo(s,o),t.ctx.lineTo(s+this.collision_width,o),t.ctx.lineTo(s+this.collision_width,o+this.collision_height),t.ctx.lineTo(s,o+this.collision_height),t.ctx.lineTo(s,o),t.ctx.stroke()}}class jt{constructor(t,e,i,s){p(this,"randTimer");p(this,"previousTime");this.game=t,this.scheme=e,this.timerMin=i,this.timerMax=s,this.randTimer=v(this.timerMin,this.timerMax),this.previousTime=0}step(){this.game.timer-this.previousTime>this.randTimer&&(this.addItem(),this.previousTime=this.game.timer,this.randTimer=v(this.timerMin,this.timerMax))}addItem(){const t=Object.entries(this.scheme),e=[];for(let[s,o]of t)this.game.items.filter(a=>a.type===s).length<o&&e.push(s);const i=v(0,e.length);if(e.length!==0&&e[i]==="hp"){let s=0;for(;s<500;){const o=new Nt(Math.random()*this.game.canvas.width,Math.random()*this.game.canvas.height,0,0,32,32,this.game,null);let n=!1;if((this.game.checkCollisionHit(o,this.game.player)||this.game.grid.checkCollision(o,this.game))&&(n=!0),!n){const h=new T(Lt,L,"Item",0,0,0,L.sprite_width,L.sprite_height,o);o.sprite=h,this.game.items.push(o);break}s++}}else if(e.length!==0&&e[i]==="speed"){let s=0;for(;s<500;){const o=new Bt(Math.random()*this.game.canvas.width,Math.random()*this.game.canvas.height,0,0,32,32,this.game,null);let n=!1;if((this.game.checkCollisionHit(o,this.game.player)||this.game.grid.checkCollision(o,this.game))&&(n=!0),!n){const h=new T(Ot,O,"Item",0,0,0,O.sprite_width,O.sprite_height,o);o.sprite=h,this.game.items.push(o);break}s++}}else if(e.length!==0&&e[i]==="attack"){let s=0;for(;s<500;){const o=new At(Math.random()*this.game.canvas.width,Math.random()*this.game.canvas.height,0,0,32,32,this.game,null);let n=!1;if((this.game.checkCollisionHit(o,this.game.player)||this.game.grid.checkCollision(o,this.game))&&(n=!0),!n){const h=new T(Rt,R,"Item",0,0,0,R.sprite_width,R.sprite_height,o);o.sprite=h,this.game.items.push(o);break}s++}}}}class $t{constructor(t,e,i){p(this,"overlayElement");p(this,"onScreen");this.elements=t,this.game=e,this.screenManager=i,this.onScreen=!1}centerElement(t){const i=t.getBoundingClientRect().width,o=this.overlayElement.clientWidth/2-i/2;t.style.left=o.toString()+"px"}init(){const t=document.querySelector("body"),e=document.querySelector("#canvas"),i=document.createElement("div");this.overlayElement=i,i.style.position="absolute";const s=e.clientLeft+e.offsetLeft-2,o=e.clientTop+e.offsetTop-2,n=e.width+4,h=e.height+4;i.style.left=s.toString()+"px",i.style.top=o.toString()+"px",i.style.width=n.toString()+"px",i.style.height=h.toString()+"px",i.style.backgroundColor="lightblue",t.appendChild(i);const a=document.createElement("div");a.innerHTML="Zombie Village",a.style.fontSize="30px",a.style.top="200px",a.style.position="absolute",a.style.textAlign="center",i.appendChild(a),this.centerElement(a);const r=document.createElement("button");r.innerHTML="Start Game",r.style.top="400px",r.style.width="100px",r.style.height="40px",r.style.position="absolute",r.onclick=()=>{this.screenManager.manageScreen("start",{fromTitleScreen:!0})},i.appendChild(r),this.centerElement(r);const c=document.createElement("button");c.innerHTML="Continue",c.style.top="500px",c.style.width="100px",c.style.height="40px",c.style.position="absolute",c.onclick=()=>{this.screenManager.manageScreen("start",{fromTitleScreen:!0})},i.appendChild(c),this.centerElement(c);const d=document.createElement("button");d.innerHTML="Exit Game",d.style.top="600px",d.style.width="100px",d.style.height="40px",d.style.position="absolute",i.appendChild(d),this.centerElement(d),this.elements.push(a,r,d)}display(){this.overlayElement.style.display="block"}hide(){this.overlayElement.style.display="none"}}class Ft{constructor(t,e,i){p(this,"overlayElement");p(this,"onScreen");this.elements=t,this.game=e,this.screenManager=i,this.onScreen=!0}centerElement(t){const i=t.getBoundingClientRect().width,o=this.overlayElement.clientWidth/2-i/2;t.style.left=o.toString()+"px"}init(){const t=document.querySelector("body"),e=document.querySelector("#canvas"),i=document.createElement("div");this.overlayElement=i,i.style.position="absolute";const s=e.clientLeft+e.offsetLeft-2,o=e.clientTop+e.offsetTop-2,n=e.width+4,h=e.height+4;i.style.left=s.toString()+"px",i.style.top=o.toString()+"px",i.style.width=n.toString()+"px",i.style.height=h.toString()+"px",t.appendChild(i);const a=document.createElement("button");a.innerHTML="Resume Game",a.style.top="400px",a.style.width="200px",a.style.height="40px",a.style.position="absolute",a.onclick=()=>{this.screenManager.manageScreen("start",{fromTitleScreen:!1}),this.game.keyLock[7]&&(this.game.keyLock[7]=!1)},i.appendChild(a),this.centerElement(a);const r=document.createElement("button");r.innerHTML="Save Game",r.style.top="500px",r.style.width="200px",r.style.height="40px",r.style.position="absolute",r.onclick=()=>{this.screenManager.manageScreen("start",{fromTitleScreen:!1})},i.appendChild(r),this.centerElement(r);const c=document.createElement("button");c.innerHTML="Return to Menu",c.style.top="600px",c.style.width="200px",c.style.height="40px",c.style.position="absolute",c.onclick=()=>{this.screenManager.manageScreen("title")},i.appendChild(c),this.centerElement(c),this.elements.push(a,r,c)}display(){this.overlayElement.style.display="block",this.game.canvas.style.filter="brightness(0.7)"}hide(){this.overlayElement.style.display="none",this.game.canvas.style.filter="none"}}class Gt{constructor(t,e,i,s){p(this,"overlayElement");p(this,"onScreen");p(this,"conversation");p(this,"textElement");p(this,"continueElement");this.state=t,this.elements=e,this.game=i,this.screenManager=s}centerElement(t){const i=t.getBoundingClientRect().width,o=this.overlayElement.clientWidth/2-i/2;t.style.left=o.toString()+"px"}init(){const t=document.querySelector("body"),e=document.querySelector("#canvas"),i=document.createElement("div");this.overlayElement=i,i.style.position="absolute";const s=e.clientLeft+e.offsetLeft-2,o=e.clientTop+e.offsetTop-2,n=e.width+4,h=e.height+4;i.style.left=s.toString()+"px",i.style.top=o.toString()+"px",i.style.width=n.toString()+"px",i.style.height=h.toString()+"px",t.appendChild(i);const a=this.overlayElement.getBoundingClientRect(),r=document.createElement("div");r.innerHTML="",r.style.fontSize="30px",r.style.bottom="0px",r.style.height="200px",r.style.paddingLeft="20px",r.style.width=(a.width-20).toString()+"px",r.style.position="absolute",r.style.backgroundColor="#ebd58f",r.style.display="flex",r.style.alignItems="center",this.overlayElement.appendChild(r),this.textElement=r;const c=document.createElement("button");c.innerHTML="Continue",c.style.bottom="0px",c.style.right="0px",c.style.width="120px",c.style.height="50px",c.style.position="absolute",this.overlayElement.appendChild(c),this.continueElement=c}display(t){let e=1;this.overlayElement.style.display="block",this.textElement.innerHTML=t[0][1],this.continueElement.onclick=()=>{e!==t.length?(this.textElement.innerHTML=t[e][1],e++):this.screenManager.manageScreen("start",{fromTitleScreen:!1,fromConversation:!0})}}hide(){this.overlayElement.style.display="none"}}class Kt{constructor(t){p(this,"gameState","title");p(this,"titleScreen");p(this,"pauseScreen");p(this,"dialogueScreen");this.game=t}init(){this.titleScreen=new $t([],this.game,this),this.titleScreen.init(),this.titleScreen.display(),this.pauseScreen=new Ft([],this.game,this),this.pauseScreen.init(),this.pauseScreen.hide(),document.addEventListener("keydown",t=>{t.code==="KeyP"&&(this.gameState==="start"?this.manageScreen("pause"):this.gameState==="pause"&&this.manageScreen("start",{fromTitleScreen:!1}))}),this.dialogueScreen=new Gt("empty",[],this.game,this),this.dialogueScreen.init(),this.dialogueScreen.hide()}manageScreen(t,e){this.gameState=t,this.gameState==="title"?(this.titleScreen.display(),this.pauseScreen.hide(),this.dialogueScreen.hide()):this.gameState==="start"?(this.titleScreen.hide(),this.pauseScreen.hide(),e.fromTitleScreen?(this.game.init(),this.game.start()):e.fromConversation&&(this.dialogueScreen.hide(),this.game.conversation.endTalking())):this.gameState==="talking"?this.dialogueScreen.display(e.conversation):this.gameState==="pause"&&(this.titleScreen.hide(),this.pauseScreen.display())}}class Ut{constructor(t,e){this.game=t,this.conversations=e}endTalking(){const t=this.game.player,e=this.game.friend;t.agent.toggleTalkMode(),e.agent.toggleTalkMode()}step(){const t=this.game.player,e=this.game.friend,i=t.state,s=e.state;t.state.stateName==="Talking"&&e.state.stateName==="Talking"&&this.game.screenManager.gameState!=="talking"&&(typeof this.conversations.friend<"u"&&!t.agent.talkMode&&!e.agent.talkMode?(t.agent.toggleTalkMode(),e.agent.toggleTalkMode()):i.readyToTalk&&s.readyToTalk&&this.game.screenManager.manageScreen("talking",{conversation:this.conversations.friend}))}}const N=[{row:7,column:8,collision_offset_x:5,collision_offset_y:5,collision_width:54,collision_height:54},{row:7,column:9,collision_offset_x:5,collision_offset_y:10,collision_width:54,collision_height:44},{row:7,column:10,collision_offset_x:27,collision_offset_y:54,collision_width:10,collision_height:10},{row:7,column:11,collision_offset_x:29,collision_offset_y:56,collision_width:8,collision_height:8},{row:10,column:8,collision_offset_x:15,collision_offset_y:44,collision_width:30,collision_height:10},{row:10,column:9,collision_offset_x:15,collision_offset_y:44,collision_width:30,collision_height:10},{row:10,column:10,collision_offset_x:15,collision_offset_y:44,collision_width:20,collision_height:10},{row:10,column:11,collision_offset_x:15,collision_offset_y:44,collision_width:20,collision_height:10}];class z extends M{constructor(e,i,s,o,n,h,a){super(i,s,o,n,h,a,"obstacle");p(this,"obstacleNum");this.game=e,this.collidable=!1}static init(e,i){let s=0;for(;e.obstacles.length<e.numObstacles&&s<500;){const o=v(0,8),n=N[o],h=new z(e,Math.random()*e.canvas.width,Math.random()*e.canvas.height,n.collision_offset_x,n.collision_offset_y,n.collision_width,n.collision_height),a=h.collision_offset_x+h.collision_width/2,r=h.collision_offset_y+h.collision_height/2;let c=!1;e.obstacles.forEach(f=>{const m=f.collision_offset_x,_=f.collision_offset_y,g=f.collision_width,x=f.collision_height,u=f.pos_x,w=f.pos_y,k=m+g/2,S=_+x/2,at=u+k-(h.pos_x+a),lt=w+S-(h.pos_y+r);Math.hypot(lt,at)<100&&(c=!0)}),e.grid.checkCollision(h,e)&&(c=!0);const d=64,y=64;!c&&h.pos_x>0&&h.pos_x<e.canvas.width-d&&h.pos_y>0&&h.pos_y<e.canvas.height-y&&(h.obstacleNum=o,e.obstacles.push(h)),s++}}drawImage(e){const i=document.getElementById("map-tile"),s=32,o=32,n=64,h=64;e.drawImage(i,N[this.obstacleNum].column*s,N[this.obstacleNum].row*o,s,o,this.pos_x,this.pos_y,n,h)}drawDebug(e,i){let s=!1;for(let h=0;h<i.length;h++)if(e.checkCollision(this,i[h])){s=!0;break}const o=this.pos_x+this.collision_offset_x,n=this.pos_y+this.collision_offset_y;e.ctx.strokeStyle=s?"#ffff00":"#ff0d00",e.ctx.beginPath(),e.ctx.moveTo(o,n),e.ctx.lineTo(o+this.collision_width,n),e.ctx.lineTo(o+this.collision_width,n+this.collision_height),e.ctx.lineTo(o,n+this.collision_height),e.ctx.lineTo(o,n),e.ctx.stroke()}}const H=document.getElementById("canvas"),Y=H.getContext("2d");Y.imageSmoothingEnabled=!1;window.addEventListener("keydown",function(l){l.code==="Space"&&l.target==document.body&&l.preventDefault()});class qt{constructor(t,e,i,s,o,n,h,a,r,c,d,y,f,m,_,g,x,u,w,k){this.canvas=t,this.ctx=e,this.camera=i,this.debug=s,this.fps=o,this.player=n,this.friend=h,this.numEnemies=a,this.numObstacles=r,this.enemies=c,this.items=d,this.obstacles=y,this.grid=f,this.hud=m,this.keyStates=_,this.keyLock=g,this.timer=x,this.itemSpawner=u,this.screenManager=w,this.conversation=k}checkCollision(t,e){const i=t.pos_x+t.collision_offset_x,s=t.pos_y+t.collision_offset_y,o=e.pos_x+e.collision_offset_x,n=e.pos_y+e.collision_offset_y;return!(i>o+e.collision_width||i+t.collision_width<o||s>n+e.collision_height||s+t.collision_height<n)}checkCollisionHit(t,e){const i=t.pos_x+t.collision_offset_x,s=t.pos_y+t.collision_offset_y,o=e.pos_x+e.hit_offset_x,n=e.pos_y+e.hit_offset_y;return!(i>o+e.hit_width||i+t.collision_width<o||s>n+e.hit_height||s+t.collision_height<n)}checkHit(t,e){const i=t.pos_x+t.collision_offset_x,s=t.pos_y+t.collision_offset_y,o=e.pos_x+e.hit_offset_x,n=e.pos_y+e.hit_offset_y;return!(i>o+e.hit_width||i+t.collision_width<o||s>n+e.hit_height||s+t.collision_height<n)}calculateObjectDistance(t,e){const i=t.center(),s=e.center(),o=i[0],n=i[1],h=s[0],a=s[1];return Math.hypot(h-o,a-n)}init(){Dt(I),this.grid=new pt(64,64,18,18,30,this),this.grid.init(),this.hud=new Et(this),this.hud.init(),F.init(this),G.init(this),K.init(this),z.init(this),this.itemSpawner=new jt(this,{hp:5,speed:5,attack:5},1e3,1500),this.camera=new Mt(this.player,this,1),this.conversation=new Ut(this,{friend:[["friend","Hello there! Welcome to Zombie Villlage."],["friend","You can meet many zombies here."],["friend","But be careful, because they may hit you!"]]})}step(t){this.timer=t;const e=this.screenManager.gameState==="pause";Y.clearRect(0,0,H.width+64*2,H.height+64*2);const i=document.querySelector("#debug-console");i.innerHTML="",e||(this.screenManager.gameState!=="talking"&&(this.itemSpawner.step(),this.items.forEach(h=>h.step()),this.enemies.forEach(h=>h.step())),this.player.step(),this.friend.step(),this.conversation.step(),this.items=this.items.filter(h=>!h.destroy),this.player.timers=this.player.timers.filter(h=>!h.destroy)),this.camera.saveContextState(),this.camera.focus();const s=[],o=[];for(const h of this.grid.gridMap)for(const a of h)a.isCollidable||a.isOuter?s.push(a):o.push(a);this.ctx.fillStyle="#007bee",this.ctx.fillRect(-3e3,-3e3,6e3,6e3),o.forEach(h=>h.drawImage(this.ctx));const n=[...this.obstacles,...this.items,...this.enemies,this.player,this.friend,...s];n.sort((h,a)=>h.center()[1]-a.center()[1]);for(const h of n)h.drawImage(this.ctx,e);if(this.camera.restoreContextState(),this.camera.saveContextState(),this.hud.draw(),this.camera.restoreContextState(),this.camera.saveContextState(),this.camera.focus(),this.debug){const h=document.querySelector("#debug-console");h.innerHTML=`<p>Player Position X: ${this.player.pos_x}`,h.innerHTML+=`<p>Player Position Y: ${this.player.pos_y}`,h.innerHTML+=`<p>Player State: ${this.player.state.stateName}`,this.enemies.length!==0&&(h.innerHTML+=`<p>Enemy State: ${this.enemies[0].state.stateName}`),h.innerHTML+=`<p>Friend State: ${this.friend.state.stateName}`,this.player.drawDebug(this,[...this.enemies,this.friend]),this.enemies.forEach(a=>a.drawDebug(this,[this.friend,this.player])),this.friend.drawDebug(this,[...this.enemies,this.player]),this.grid.drawDebug(this),this.obstacles.forEach(a=>a.drawDebug(this,[this.player])),this.items.forEach(a=>a.drawDebug(this,[this.player]))}this.camera.restoreContextState()}start(){requestAnimationFrame(ht)}}const I=new qt(H,Y,null,!1,60,null,null,5,10,[],[],[],null,null,[!1,!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1,!1],0,null,null,null),nt=new Kt(I);I.screenManager=nt;let Q=performance.now();const zt=I.fps,tt=1e3/zt,ht=l=>{requestAnimationFrame(ht);const t=performance.now(),e=t-Q;if(e<tt)return;const i=e%tt;Q=t-i,I.step(l)};nt.init();
